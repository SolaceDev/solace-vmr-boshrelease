#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/prepare_vmr/helpers/ctl_setup.sh 'prepare_vmr'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8
export DOCKER_HOST=unix:///var/vcap/sys/run/docker/docker.sock

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # store pid in $PIDFILE
    echo $$ > $PIDFILE

    sudo apt-get install -y jq

    time docker \
      load -i /var/vcap/packages/vmr_image/soltr-docker.tgz
        >>$LOG_DIR/$JOB_NAME.stdout.log \
        2>>$LOG_DIR/$JOB_NAME.stderr.log

    # tag it to latest so we can find the image
    if [ ! -z "`docker images -q solace-app:latest`" ]
    then
        docker rmi solace-app:latest
    fi
    tar zxf /var/vcap/packages/vmr_image/soltr-docker.tgz manifest.json
    IMAGE_NAME=`jq -r '.[0].RepoTags[0]' manifest.json`
    echo "Installing $IMAGE_NAME"
    IMAGE_ID=`docker images -q $IMAGE_NAME`
    echo "Id for $IMAGE_NAME is $IMAGE_ID.  Tagging as solace-app:latest."
    docker tag $IMAGE_ID solace-app:latest

    # do nothing forever
    exec tail -f /dev/null
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: install_ctl {start|stop}"

    ;;

esac
exit 0